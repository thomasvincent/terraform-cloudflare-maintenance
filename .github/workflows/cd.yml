name: Terraform CD

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - production

permissions:
  contents: read
  # Required for creating releases
  actions: read

jobs:
  deploy:
    name: Deploy to ${{ github.event.inputs.environment || 'dev' }}
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'dev' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: worker/package-lock.json

      - name: Build Worker
        run: cd worker && npm ci && npm run build

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.1
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init
        env:
          TF_VAR_environment: ${{ github.event.inputs.environment || 'dev' }}

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=tfplan
        env:
          TF_VAR_cloudflare_api_token: ${{ secrets.CF_API_TOKEN }}
          TF_VAR_cloudflare_account_id: ${{ secrets.CF_ACCOUNT_ID }}
          TF_VAR_cloudflare_zone_id: ${{ secrets.CF_ZONE_ID }}
          TF_VAR_environment: ${{ github.event.inputs.environment || 'dev' }}
          TF_VAR_enabled: ${{ (github.event.inputs.environment == 'production') && 'false' || 'true' }}

      - name: Terraform Apply
        if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')
        run: terraform apply -auto-approve tfplan
        env:
          TF_VAR_cloudflare_api_token: ${{ secrets.CF_API_TOKEN }}
          TF_VAR_cloudflare_account_id: ${{ secrets.CF_ACCOUNT_ID }}
          TF_VAR_cloudflare_zone_id: ${{ secrets.CF_ZONE_ID }}
          TF_VAR_environment: ${{ github.event.inputs.environment || 'dev' }}

      - name: Create Release for Tags
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: |
            worker/dist/index.js
        # Note: This step needs GITHUB_TOKEN with write permissions to create releases
        # Make sure the token has required permissions in repo settings
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}